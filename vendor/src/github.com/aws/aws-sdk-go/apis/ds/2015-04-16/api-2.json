{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2015-04-16",
    "endpointPrefix":"ds",
    "jsonVersion":"1.1",
    "serviceAbbreviation":"Directory Service",
    "serviceFullName":"AWS Directory Service",
    "signatureVersion":"v4",
    "targetPrefix":"DirectoryService_20150416",
    "protocol":"json"
  },
  "operations":{
    "ConnectDirectory":{
      "name":"ConnectDirectory",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"ConnectDirectoryRequest"},
      "output":{"shape":"ConnectDirectoryResult"},
      "errors":[
        {
          "shape":"DirectoryLimitExceededException",
          "exception":true
        },
        {
          "shape":"InvalidParameterException",
          "exception":true
        },
        {
          "shape":"ClientException",
          "exception":true
        },
        {
          "shape":"ServiceException",
          "exception":true,
          "fault":true
        }
      ]
    },
    "CreateAlias":{
      "name":"CreateAlias",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateAliasRequest"},
      "output":{"shape":"CreateAliasResult"},
      "errors":[
        {
          "shape":"EntityAlreadyExistsException",
          "exception":true
        },
        {
          "shape":"EntityDoesNotExistException",
          "exception":true
        },
        {
          "shape":"InvalidParameterException",
          "exception":true
        },
        {
          "shape":"ClientException",
          "exception":true
        },
        {
          "shape":"ServiceException",
          "exception":true,
          "fault":true
        }
      ]
    },
    "CreateComputer":{
      "name":"CreateComputer",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateComputerRequest"},
      "output":{"shape":"CreateComputerResult"},
      "errors":[
        {
          "shape":"AuthenticationFailedException",
          "exception":true
        },
        {
          "shape":"DirectoryUnavailableException",
          "exception":true
        },
        {
          "shape":"EntityAlreadyExistsException",
          "exception":true
        },
        {
          "shape":"EntityDoesNotExistException",
          "exception":true
        },
        {
          "shape":"InvalidParameterException",
          "exception":true
        },
        {
          "shape":"UnsupportedOperationException",
          "exception":true
        },
        {
          "shape":"ClientException",
          "exception":true
        },
        {
          "shape":"ServiceException",
          "exception":true,
          "fault":true
        }
      ]
    },
    "CreateDirectory":{
      "name":"CreateDirectory",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateDirectoryRequest"},
      "output":{"shape":"CreateDirectoryResult"},
      "errors":[
        {
          "shape":"DirectoryLimitExceededException",
          "exception":true
        },
        {
          "shape":"InvalidParameterException",
          "exception":true
        },
        {
          "shape":"ClientException",
          "exception":true
        },
        {
          "shape":"ServiceException",
          "exception":true,
          "fault":true
        }
      ]
    },
    "CreateSnapshot":{
      "name":"CreateSnapshot",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"CreateSnapshotRequest"},
      "output":{"shape":"CreateSnapshotResult"},
      "errors":[
        {
          "shape":"EntityDoesNotExistException",
          "exception":true
        },
        {
          "shape":"InvalidParameterException",
          "exception":true
        },
        {
          "shape":"SnapshotLimitExceededException",
          "exception":true
        },
        {
          "shape":"ClientException",
          "exception":true
        },
        {
          "shape":"ServiceException",
          "exception":true,
          "fault":true
        }
      ]
    },
    "DeleteDirectory":{
      "name":"DeleteDirectory",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteDirectoryRequest"},
      "output":{"shape":"DeleteDirectoryResult"},
      "errors":[
        {
          "shape":"EntityDoesNotExistException",
          "exception":true
        },
        {
          "shape":"ClientException",
          "exception":true
        },
        {
          "shape":"ServiceException",
          "exception":true,
          "fault":true
        }
      ]
    },
    "DeleteSnapshot":{
      "name":"DeleteSnapshot",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DeleteSnapshotRequest"},
      "output":{"shape":"DeleteSnapshotResult"},
      "errors":[
        {
          "shape":"EntityDoesNotExistException",
          "exception":true
        },
        {
          "shape":"InvalidParameterException",
          "exception":true
        },
        {
          "shape":"ClientException",
          "exception":true
        },
        {
          "shape":"ServiceException",
          "exception":true,
          "fault":true
        }
      ]
    },
    "DescribeDirectories":{
      "name":"DescribeDirectories",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeDirectoriesRequest"},
      "output":{"shape":"DescribeDirectoriesResult"},
      "errors":[
        {
          "shape":"EntityDoesNotExistException",
          "exception":true
        },
        {
          "shape":"InvalidParameterException",
          "exception":true
        },
        {
          "shape":"InvalidNextTokenException",
          "exception":true
        },
        {
          "shape":"ClientException",
          "exception":true
        },
        {
          "shape":"ServiceException",
          "exception":true,
          "fault":true
        }
      ]
    },
    "DescribeSnapshots":{
      "name":"DescribeSnapshots",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DescribeSnapshotsRequest"},
      "output":{"shape":"DescribeSnapshotsResult"},
      "errors":[
        {
          "shape":"EntityDoesNotExistException",
          "exception":true
        },
        {
          "shape":"InvalidParameterException",
          "exception":true
        },
        {
          "shape":"InvalidNextTokenException",
          "exception":true
        },
        {
          "shape":"ClientException",
          "exception":true
        },
        {
          "shape":"ServiceException",
          "exception":true,
          "fault":true
        }
      ]
    },
    "DisableRadius":{
      "name":"DisableRadius",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DisableRadiusRequest"},
      "output":{"shape":"DisableRadiusResult"},
      "errors":[
        {
          "shape":"EntityDoesNotExistException",
          "exception":true
        },
        {
          "shape":"ClientException",
          "exception":true
        },
        {
          "shape":"ServiceException",
          "exception":true,
          "fault":true
        }
      ]
    },
    "DisableSso":{
      "name":"DisableSso",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"DisableSsoRequest"},
      "output":{"shape":"DisableSsoResult"},
      "errors":[
        {
          "shape":"EntityDoesNotExistException",
          "exception":true
        },
        {
          "shape":"InsufficientPermissionsException",
          "exception":true
        },
        {
          "shape":"AuthenticationFailedException",
          "exception":true
        },
        {
          "shape":"ClientException",
          "exception":true
        },
        {
          "shape":"ServiceException",
          "exception":true,
          "fault":true
        }
      ]
    },
    "EnableRadius":{
      "name":"EnableRadius",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"EnableRadiusRequest"},
      "output":{"shape":"EnableRadiusResult"},
      "errors":[
        {
          "shape":"InvalidParameterException",
          "exception":true
        },
        {
          "shape":"EntityAlreadyExistsException",
          "exception":true
        },
        {
          "shape":"EntityDoesNotExistException",
          "exception":true
        },
        {
          "shape":"ClientException",
          "exception":true
        },
        {
          "shape":"ServiceException",
          "exception":true,
          "fault":true
        }
      ]
    },
    "EnableSso":{
      "name":"EnableSso",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"EnableSsoRequest"},
      "output":{"shape":"EnableSsoResult"},
      "errors":[
        {
          "shape":"EntityDoesNotExistException",
          "exception":true
        },
        {
          "shape":"InsufficientPermissionsException",
          "exception":true
        },
        {
          "shape":"AuthenticationFailedException",
          "exception":true
        },
        {
          "shape":"ClientException",
          "exception":true
        },
        {
          "shape":"ServiceException",
          "exception":true,
          "fault":true
        }
      ]
    },
    "GetDirectoryLimits":{
      "name":"GetDirectoryLimits",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GetDirectoryLimitsRequest"},
      "output":{"shape":"GetDirectoryLimitsResult"},
      "errors":[
        {
          "shape":"EntityDoesNotExistException",
          "exception":true
        },
        {
          "shape":"ClientException",
          "exception":true
        },
        {
          "shape":"ServiceException",
          "exception":true,
          "fault":true
        }
      ]
    },
    "GetSnapshotLimits":{
      "name":"GetSnapshotLimits",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"GetSnapshotLimitsRequest"},
      "output":{"shape":"GetSnapshotLimitsResult"},
      "errors":[
        {
          "shape":"EntityDoesNotExistException",
          "exception":true
        },
        {
          "shape":"ClientException",
          "exception":true
        },
        {
          "shape":"ServiceException",
          "exception":true,
          "fault":true
        }
      ]
    },
    "RestoreFromSnapshot":{
      "name":"RestoreFromSnapshot",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"RestoreFromSnapshotRequest"},
      "output":{"shape":"RestoreFromSnapshotResult"},
      "errors":[
        {
          "shape":"EntityDoesNotExistException",
          "exception":true
        },
        {
          "shape":"InvalidParameterException",
          "exception":true
        },
        {
          "shape":"ClientException",
          "exception":true
        },
        {
          "shape":"ServiceException",
          "exception":true,
          "fault":true
        }
      ]
    },
    "UpdateRadius":{
      "name":"UpdateRadius",
      "http":{
        "method":"POST",
        "requestUri":"/"
      },
      "input":{"shape":"UpdateRadiusRequest"},
      "output":{"shape":"UpdateRadiusResult"},
      "errors":[
        {
          "shape":"InvalidParameterException",
          "exception":true
        },
        {
          "shape":"EntityDoesNotExistException",
          "exception":true
        },
        {
          "shape":"ClientException",
          "exception":true
        },
        {
          "shape":"ServiceException",
          "exception":true,
          "fault":true
        }
      ]
    }
  },
  "shapes":{
    "AccessUrl":{
      "type":"string",
      "min":1,
      "max":128
    },
    "AliasName":{
      "type":"string",
      "min":1,
      "max":62,
      "pattern":"^(?!d-)([\\da-zA-Z]+)([-]*[\\da-zA-Z])*"
    },
    "Attribute":{
      "type":"structure",
      "members":{
        "Name":{"shape":"AttributeName"},
        "Value":{"shape":"AttributeValue"}
      }
    },
    "AttributeName":{
      "type":"string",
      "min":1
    },
    "AttributeValue":{"type":"string"},
    "Attributes":{
      "type":"list",
      "member":{"shape":"Attribute"}
    },
    "AuthenticationFailedException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"ExceptionMessage"},
        "RequestId":{"shape":"RequestId"}
      },
      "exception":true
    },
    "AvailabilityZone":{"type":"string"},
    "AvailabilityZones":{
      "type":"list",
      "member":{"shape":"AvailabilityZone"}
    },
    "ClientException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"ExceptionMessage"},
        "RequestId":{"shape":"RequestId"}
      },
      "exception":true
    },
    "CloudOnlyDirectoriesLimitReached":{"type":"boolean"},
    "Computer":{
      "type":"structure",
      "members":{
        "ComputerId":{"shape":"SID"},
        "ComputerName":{"shape":"ComputerName"},
        "ComputerAttributes":{"shape":"Attributes"}
      }
    },
    "ComputerName":{
      "type":"string",
      "min":1,
      "max":15
    },
    "ComputerPassword":{
      "type":"string",
      "min":8,
      "max":64,
      "pattern":"[\\u0020-\\u00FF]+",
      "sensitive":true
    },
    "ConnectDirectoryRequest":{
      "type":"structure",
      "required":[
        "Name",
        "Password",
        "Size",
        "ConnectSettings"
      ],
      "members":{
        "Name":{"shape":"DirectoryName"},
        "ShortName":{"shape":"DirectoryShortName"},
        "Password":{"shape":"ConnectPassword"},
        "Description":{"shape":"Description"},
        "Size":{"shape":"DirectorySize"},
        "ConnectSettings":{"shape":"DirectoryConnectSettings"}
      }
    },
    "ConnectDirectoryResult":{
      "type":"structure",
      "members":{
        "DirectoryId":{"shape":"DirectoryId"}
      }
    },
    "ConnectPassword":{
      "type":"string",
      "min":1,
      "max":128,
      "sensitive":true
    },
    "ConnectedDirectoriesLimitReached":{"type":"boolean"},
    "CreateAliasRequest":{
      "type":"structure",
      "required":[
        "DirectoryId",
        "Alias"
      ],
      "members":{
        "DirectoryId":{"shape":"DirectoryId"},
        "Alias":{"shape":"AliasName"}
      }
    },
    "CreateAliasResult":{
      "type":"structure",
      "members":{
        "DirectoryId":{"shape":"DirectoryId"},
        "Alias":{"shape":"AliasName"}
      }
    },
    "CreateComputerRequest":{
      "type":"structure",
      "required":[
        "DirectoryId",
        "ComputerName",
        "Password"
      ],
      "members":{
        "DirectoryId":{"shape":"DirectoryId"},
        "ComputerName":{"shape":"ComputerName"},
        "Password":{"shape":"ComputerPassword"},
        "OrganizationalUnitDistinguishedName":{"shape":"OrganizationalUnitDN"},
        "ComputerAttributes":{"shape":"Attributes"}
      }
    },
    "CreateComputerResult":{
      "type":"structure",
      "members":{
        "Computer":{"shape":"Computer"}
      }
    },
    "CreateDirectoryRequest":{
      "type":"structure",
      "required":[
        "Name",
        "Password",
        "Size"
      ],
      "members":{
        "Name":{"shape":"DirectoryName"},
        "ShortName":{"shape":"DirectoryShortName"},
        "Password":{"shape":"Password"},
        "Description":{"shape":"Description"},
        "Size":{"shape":"DirectorySize"},
        "VpcSettings":{"shape":"DirectoryVpcSettings"}
      }
    },
    "CreateDirectoryResult":{
      "type":"structure",
      "members":{
        "DirectoryId":{"shape":"DirectoryId"}
      }
    },
    "CreateSnapshotRequest":{
      "type":"structure",
      "required":["DirectoryId"],
      "members":{
        "DirectoryId":{"shape":"DirectoryId"},
        "Name":{"shape":"SnapshotName"}
      }
    },
    "CreateSnapshotResult":{
      "type":"structure",
      "members":{
        "SnapshotId":{"shape":"SnapshotId"}
      }
    },
    "DeleteDirectoryRequest":{
      "type":"structure",
      "required":["DirectoryId"],
      "members":{
        "DirectoryId":{"shape":"DirectoryId"}
      }
    },
    "DeleteDirectoryResult":{
      "type":"structure",
      "members":{
        "DirectoryId":{"shape":"DirectoryId"}
      }
    },
    "DeleteSnapshotRequest":{
      "type":"structure",
      "required":["SnapshotId"],
      "members":{
        "SnapshotId":{"shape":"SnapshotId"}
      }
    },
    "DeleteSnapshotResult":{
      "type":"structure",
      "members":{
        "SnapshotId":{"shape":"SnapshotId"}
      }
    },
    "DescribeDirectoriesRequest":{
      "type":"structure",
      "members":{
        "DirectoryIds":{"shape":"DirectoryIds"},
        "NextToken":{"shape":"NextToken"},
        "Limit":{"shape":"Limit"}
      }
    },
    "DescribeDirectoriesResult":{
      "type":"structure",
      "members":{
        "DirectoryDescriptions":{"shape":"DirectoryDescriptions"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "DescribeSnapshotsRequest":{
      "type":"structure",
      "members":{
        "DirectoryId":{"shape":"DirectoryId"},
        "SnapshotIds":{"shape":"SnapshotIds"},
        "NextToken":{"shape":"NextToken"},
        "Limit":{"shape":"Limit"}
      }
    },
    "DescribeSnapshotsResult":{
      "type":"structure",
      "members":{
        "Snapshots":{"shape":"Snapshots"},
        "NextToken":{"shape":"NextToken"}
      }
    },
    "Description":{
      "type":"string",
      "min":0,
      "max":128,
      "pattern":"^([a-zA-Z0-9_])[\\\\a-zA-Z0-9_@#%*+=:?./!\\s-]*$"
    },
    "DirectoryConnectSettings":{
      "type":"structure",
      "required":[
        "VpcId",
        "SubnetIds",
        "CustomerDnsIps",
        "CustomerUserName"
      ],
      "members":{
        "VpcId":{"shape":"VpcId"},
        "SubnetIds":{"shape":"SubnetIds"},
        "CustomerDnsIps":{"shape":"DnsIpAddrs"},
        "CustomerUserName":{"shape":"UserName"}
      }
    },
    "DirectoryConnectSettingsDescription":{
      "type":"structure",
      "members":{
        "VpcId":{"shape":"VpcId"},
        "SubnetIds":{"shape":"SubnetIds"},
        "CustomerUserName":{"shape":"UserName"},
        "SecurityGroupId":{"shape":"SecurityGroupId"},
        "AvailabilityZones":{"shape":"AvailabilityZones"},
        "ConnectIps":{"shape":"IpAddrs"}
      }
    },
    "DirectoryDescription":{
      "type":"structure",
      "members":{
        "DirectoryId":{"shape":"DirectoryId"},
        "Name":{"shape":"DirectoryName"},
        "ShortName":{"shape":"DirectoryShortName"},
        "Size":{"shape":"DirectorySize"},
        "Alias":{"shape":"AliasName"},
        "AccessUrl":{"shape":"AccessUrl"},
        "Description":{"shape":"Description"},
        "DnsIpAddrs":{"shape":"DnsIpAddrs"},
        "Stage":{"shape":"DirectoryStage"},
        "LaunchTime":{"shape":"LaunchTime"},
        "StageLastUpdatedDateTime":{"shape":"LastUpdatedDateTime"},
        "Type":{"shape":"DirectoryType"},
        "VpcSettings":{"shape":"DirectoryVpcSettingsDescription"},
        "ConnectSettings":{"shape":"DirectoryConnectSettingsDescription"},
        "RadiusSettings":{"shape":"RadiusSettings"},
        "RadiusStatus":{"shape":"RadiusStatus"},
        "StageReason":{"shape":"StageReason"},
        "SsoEnabled":{"shape":"SsoEnabled"}
      }
    },
    "DirectoryDescriptions":{
      "type":"list",
      "member":{"shape":"DirectoryDescription"}
    },
    "DirectoryId":{
      "type":"string",
      "pattern":"^d-[0-9a-f]{10}$"
    },
    "DirectoryIds":{
      "type":"list",
      "member":{"shape":"DirectoryId"}
    },
    "DirectoryLimitExceededException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"ExceptionMessage"},
        "RequestId":{"shape":"RequestId"}
      },
      "exception":true
    },
    "DirectoryLimits":{
      "type":"structure",
      "members":{
        "CloudOnlyDirectoriesLimit":{"shape":"Limit"},
        "CloudOnlyDirectoriesCurrentCount":{"shape":"Limit"},
        "CloudOnlyDirectoriesLimitReached":{"shape":"CloudOnlyDirectoriesLimitReached"},
        "ConnectedDirectoriesLimit":{"shape":"Limit"},
        "ConnectedDirectoriesCurrentCount":{"shape":"Limit"},
        "ConnectedDirectoriesLimitReached":{"shape":"ConnectedDirectoriesLimitReached"}
      }
    },
    "DirectoryName":{
      "type":"string",
      "pattern":"^([a-zA-Z0-9]+[\\\\.-])+([a-zA-Z0-9])+$"
    },
    "DirectoryShortName":{
      "type":"string",
      "pattern":"^[^\\\\/:*?\\\"\\<\\>|.]+[^\\\\/:*?\\\"<>|]*$"
    },
    "DirectorySize":{
      "type":"string",
      "enum":[
        "Small",
        "Large"
      ]
    },
    "DirectoryStage":{
      "type":"string",
      "enum":[
        "Requested",
        "Creating",
        "Created",
        "Active",
        "Inoperable",
        "Impaired",
        "Restoring",
        "RestoreFailed",
        "Deleting",
        "Deleted",
        "Failed"
      ]
    },
    "DirectoryType":{
      "type":"string",
      "enum":[
        "SimpleAD",
        "ADConnector"
      ]
    },
    "DirectoryUnavailableException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"ExceptionMessage"},
        "RequestId":{"shape":"RequestId"}
      },
      "exception":true
    },
    "DirectoryVpcSettings":{
      "type":"structure",
      "required":[
        "VpcId",
        "SubnetIds"
      ],
      "members":{
        "VpcId":{"shape":"VpcId"},
        "SubnetIds":{"shape":"SubnetIds"}
      }
    },
    "DirectoryVpcSettingsDescription":{
      "type":"structure",
      "members":{
        "VpcId":{"shape":"VpcId"},
        "SubnetIds":{"shape":"SubnetIds"},
        "SecurityGroupId":{"shape":"SecurityGroupId"},
        "AvailabilityZones":{"shape":"AvailabilityZones"}
      }
    },
    "DisableRadiusRequest":{
      "type":"structure",
      "required":["DirectoryId"],
      "members":{
        "DirectoryId":{"shape":"DirectoryId"}
      }
    },
    "DisableRadiusResult":{
      "type":"structure",
      "members":{
      }
    },
    "DisableSsoRequest":{
      "type":"structure",
      "required":["DirectoryId"],
      "members":{
        "DirectoryId":{"shape":"DirectoryId"},
        "UserName":{"shape":"UserName"},
        "Password":{"shape":"ConnectPassword"}
      }
    },
    "DisableSsoResult":{
      "type":"structure",
      "members":{
      }
    },
    "DnsIpAddrs":{
      "type":"list",
      "member":{"shape":"IpAddr"}
    },
    "EnableRadiusRequest":{
      "type":"structure",
      "required":[
        "DirectoryId",
        "RadiusSettings"
      ],
      "members":{
        "DirectoryId":{"shape":"DirectoryId"},
        "RadiusSettings":{"shape":"RadiusSettings"}
      }
    },
    "EnableRadiusResult":{
      "type":"structure",
      "members":{
      }
    },
    "EnableSsoRequest":{
      "type":"structure",
      "required":["DirectoryId"],
      "members":{
        "DirectoryId":{"shape":"DirectoryId"},
        "UserName":{"shape":"UserName"},
        "Password":{"shape":"ConnectPassword"}
      }
    },
    "EnableSsoResult":{
      "type":"structure",
      "members":{
      }
    },
    "EntityAlreadyExistsException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"ExceptionMessage"},
        "RequestId":{"shape":"RequestId"}
      },
      "exception":true
    },
    "EntityDoesNotExistException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"ExceptionMessage"},
        "RequestId":{"shape":"RequestId"}
      },
      "exception":true
    },
    "ExceptionMessage":{"type":"string"},
    "GetDirectoryLimitsRequest":{
      "type":"structure",
      "members":{
      }
    },
    "GetDirectoryLimitsResult":{
      "type":"structure",
      "members":{
        "DirectoryLimits":{"shape":"DirectoryLimits"}
      }
    },
    "GetSnapshotLimitsRequest":{
      "type":"structure",
      "required":["DirectoryId"],
      "members":{
        "DirectoryId":{"shape":"DirectoryId"}
      }
    },
    "GetSnapshotLimitsResult":{
      "type":"structure",
      "members":{
        "SnapshotLimits":{"shape":"SnapshotLimits"}
      }
    },
    "InsufficientPermissionsException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"ExceptionMessage"},
        "RequestId":{"shape":"RequestId"}
      },
      "exception":true
    },
    "InvalidNextTokenException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"ExceptionMessage"},
        "RequestId":{"shape":"RequestId"}
      },
      "exception":true
    },
    "InvalidParameterException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"ExceptionMessage"},
        "RequestId":{"shape":"RequestId"}
      },
      "exception":true
    },
    "IpAddr":{
      "type":"string",
      "pattern":"^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
    },
    "IpAddrs":{
      "type":"list",
      "member":{"shape":"IpAddr"}
    },
    "LastUpdatedDateTime":{"type":"timestamp"},
    "LaunchTime":{"type":"timestamp"},
    "Limit":{
      "type":"integer",
      "min":0
    },
    "ManualSnapshotsLimitReached":{"type":"boolean"},
    "NextToken":{"type":"string"},
    "OrganizationalUnitDN":{
      "type":"string",
      "min":1,
      "max":2000
    },
    "Password":{
      "type":"string",
      "pattern":"(?=^.{8,64}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
      "sensitive":true
    },
    "PortNumber":{
      "type":"integer",
      "min":1025,
      "max":65535
    },
    "RadiusAuthenticationProtocol":{
      "type":"string",
      "enum":[
        "PAP",
        "CHAP",
        "MS-CHAPv1",
        "MS-CHAPv2"
      ]
    },
    "RadiusDisplayLabel":{
      "type":"string",
      "min":1,
      "max":64
    },
    "RadiusRetries":{
      "type":"integer",
      "min":0,
      "max":10
    },
    "RadiusSettings":{
      "type":"structure",
      "members":{
        "RadiusServers":{"shape":"Servers"},
        "RadiusPort":{"shape":"PortNumber"},
        "RadiusTimeout":{"shape":"RadiusTimeout"},
        "RadiusRetries":{"shape":"RadiusRetries"},
        "SharedSecret":{"shape":"RadiusSharedSecret"},
        "AuthenticationProtocol":{"shape":"RadiusAuthenticationProtocol"},
        "DisplayLabel":{"shape":"RadiusDisplayLabel"},
        "UseSameUsername":{"shape":"UseSameUsername"}
      }
    },
    "RadiusSharedSecret":{
      "type":"string",
      "min":8,
      "max":512,
      "sensitive":true
    },
    "RadiusStatus":{
      "type":"string",
      "enum":[
        "Creating",
        "Completed",
        "Failed"
      ]
    },
    "RadiusTimeout":{
      "type":"integer",
      "min":1,
      "max":20
    },
    "RequestId":{
      "type":"string",
      "pattern":"^([A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12})$"
    },
    "RestoreFromSnapshotRequest":{
      "type":"structure",
      "required":["SnapshotId"],
      "members":{
        "SnapshotId":{"shape":"SnapshotId"}
      }
    },
    "RestoreFromSnapshotResult":{
      "type":"structure",
      "members":{
      }
    },
    "SID":{
      "type":"string",
      "min":1,
      "max":256,
      "pattern":"[&\\w+-.@]+"
    },
    "SecurityGroupId":{
      "type":"string",
      "pattern":"^(sg-[0-9a-f]{8})$"
    },
    "Server":{
      "type":"string",
      "min":1,
      "max":256
    },
    "Servers":{
      "type":"list",
      "member":{"shape":"Server"}
    },
    "ServiceException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"ExceptionMessage"},
        "RequestId":{"shape":"RequestId"}
      },
      "exception":true,
      "fault":true
    },
    "Snapshot":{
      "type":"structure",
      "members":{
        "DirectoryId":{"shape":"DirectoryId"},
        "SnapshotId":{"shape":"SnapshotId"},
        "Type":{"shape":"SnapshotType"},
        "Name":{"shape":"SnapshotName"},
        "Status":{"shape":"SnapshotStatus"},
        "StartTime":{"shape":"StartTime"}
      }
    },
    "SnapshotId":{
      "type":"string",
      "pattern":"^s-[0-9a-f]{10}$"
    },
    "SnapshotIds":{
      "type":"list",
      "member":{"shape":"SnapshotId"}
    },
    "SnapshotLimitExceededException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"ExceptionMessage"},
        "RequestId":{"shape":"RequestId"}
      },
      "exception":true
    },
    "SnapshotLimits":{
      "type":"structure",
      "members":{
        "ManualSnapshotsLimit":{"shape":"Limit"},
        "ManualSnapshotsCurrentCount":{"shape":"Limit"},
        "ManualSnapshotsLimitReached":{"shape":"ManualSnapshotsLimitReached"}
      }
    },
    "SnapshotName":{
      "type":"string",
      "min":0,
      "max":128,
      "pattern":"^([a-zA-Z0-9_])[\\\\a-zA-Z0-9_@#%*+=:?./!\\s-]*$"
    },
    "SnapshotStatus":{
      "type":"string",
      "enum":[
        "Creating",
        "Completed",
        "Failed"
      ]
    },
    "SnapshotType":{
      "type":"string",
      "enum":[
        "Auto",
        "Manual"
      ]
    },
    "Snapshots":{
      "type":"list",
      "member":{"shape":"Snapshot"}
    },
    "SsoEnabled":{"type":"boolean"},
    "StageReason":{"type":"string"},
    "StartTime":{"type":"timestamp"},
    "SubnetId":{
      "type":"string",
      "pattern":"^(subnet-[0-9a-f]{8})$"
    },
    "SubnetIds":{
      "type":"list",
      "member":{"shape":"SubnetId"}
    },
    "UnsupportedOperationException":{
      "type":"structure",
      "members":{
        "Message":{"shape":"ExceptionMessage"},
        "RequestId":{"shape":"RequestId"}
      },
      "exception":true
    },
    "UpdateRadiusRequest":{
      "type":"structure",
      "required":[
        "DirectoryId",
        "RadiusSettings"
      ],
      "members":{
        "DirectoryId":{"shape":"DirectoryId"},
        "RadiusSettings":{"shape":"RadiusSettings"}
      }
    },
    "UpdateRadiusResult":{
      "type":"structure",
      "members":{
      }
    },
    "UseSameUsername":{"type":"boolean"},
    "UserName":{
      "type":"string",
      "min":1,
      "pattern":"[a-zA-Z0-9._-]+"
    },
    "VpcId":{
      "type":"string",
      "pattern":"^(vpc-[0-9a-f]{8})$"
    }
  }
}
