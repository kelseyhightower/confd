// Code generated by protoc-gen-go. DO NOT EDIT.
// source: database.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	database.proto

It has these top-level messages:
	ConfigureRequest
	ConfigureResponse
	GetValuesRequest
	GetValuesResponse
	WatchPrefixRequest
	WatchPrefixResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type ConfigureRequest struct {
	Config map[string]string `protobuf:"bytes,1,rep,name=config" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ConfigureRequest) Reset()                    { *m = ConfigureRequest{} }
func (m *ConfigureRequest) String() string            { return proto1.CompactTextString(m) }
func (*ConfigureRequest) ProtoMessage()               {}
func (*ConfigureRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ConfigureRequest) GetConfig() map[string]string {
	if m != nil {
		return m.Config
	}
	return nil
}

type ConfigureResponse struct {
}

func (m *ConfigureResponse) Reset()                    { *m = ConfigureResponse{} }
func (m *ConfigureResponse) String() string            { return proto1.CompactTextString(m) }
func (*ConfigureResponse) ProtoMessage()               {}
func (*ConfigureResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type GetValuesRequest struct {
	Keys []string `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
}

func (m *GetValuesRequest) Reset()                    { *m = GetValuesRequest{} }
func (m *GetValuesRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetValuesRequest) ProtoMessage()               {}
func (*GetValuesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetValuesRequest) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

type GetValuesResponse struct {
	Values map[string]string `protobuf:"bytes,1,rep,name=values" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *GetValuesResponse) Reset()                    { *m = GetValuesResponse{} }
func (m *GetValuesResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetValuesResponse) ProtoMessage()               {}
func (*GetValuesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *GetValuesResponse) GetValues() map[string]string {
	if m != nil {
		return m.Values
	}
	return nil
}

type WatchPrefixRequest struct {
	Prefix string   `protobuf:"bytes,1,opt,name=prefix" json:"prefix,omitempty"`
	Keys   []string `protobuf:"bytes,2,rep,name=keys" json:"keys,omitempty"`
}

func (m *WatchPrefixRequest) Reset()                    { *m = WatchPrefixRequest{} }
func (m *WatchPrefixRequest) String() string            { return proto1.CompactTextString(m) }
func (*WatchPrefixRequest) ProtoMessage()               {}
func (*WatchPrefixRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *WatchPrefixRequest) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *WatchPrefixRequest) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

type WatchPrefixResponse struct {
}

func (m *WatchPrefixResponse) Reset()                    { *m = WatchPrefixResponse{} }
func (m *WatchPrefixResponse) String() string            { return proto1.CompactTextString(m) }
func (*WatchPrefixResponse) ProtoMessage()               {}
func (*WatchPrefixResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func init() {
	proto1.RegisterType((*ConfigureRequest)(nil), "proto.ConfigureRequest")
	proto1.RegisterType((*ConfigureResponse)(nil), "proto.ConfigureResponse")
	proto1.RegisterType((*GetValuesRequest)(nil), "proto.GetValuesRequest")
	proto1.RegisterType((*GetValuesResponse)(nil), "proto.GetValuesResponse")
	proto1.RegisterType((*WatchPrefixRequest)(nil), "proto.WatchPrefixRequest")
	proto1.RegisterType((*WatchPrefixResponse)(nil), "proto.WatchPrefixResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Database service

type DatabaseClient interface {
	Configure(ctx context.Context, in *ConfigureRequest, opts ...grpc.CallOption) (*ConfigureResponse, error)
	GetValues(ctx context.Context, in *GetValuesRequest, opts ...grpc.CallOption) (*GetValuesResponse, error)
	WatchPrefix(ctx context.Context, in *WatchPrefixRequest, opts ...grpc.CallOption) (Database_WatchPrefixClient, error)
}

type databaseClient struct {
	cc *grpc.ClientConn
}

func NewDatabaseClient(cc *grpc.ClientConn) DatabaseClient {
	return &databaseClient{cc}
}

func (c *databaseClient) Configure(ctx context.Context, in *ConfigureRequest, opts ...grpc.CallOption) (*ConfigureResponse, error) {
	out := new(ConfigureResponse)
	err := grpc.Invoke(ctx, "/proto.Database/Configure", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseClient) GetValues(ctx context.Context, in *GetValuesRequest, opts ...grpc.CallOption) (*GetValuesResponse, error) {
	out := new(GetValuesResponse)
	err := grpc.Invoke(ctx, "/proto.Database/GetValues", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *databaseClient) WatchPrefix(ctx context.Context, in *WatchPrefixRequest, opts ...grpc.CallOption) (Database_WatchPrefixClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Database_serviceDesc.Streams[0], c.cc, "/proto.Database/WatchPrefix", opts...)
	if err != nil {
		return nil, err
	}
	x := &databaseWatchPrefixClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Database_WatchPrefixClient interface {
	Recv() (*WatchPrefixResponse, error)
	grpc.ClientStream
}

type databaseWatchPrefixClient struct {
	grpc.ClientStream
}

func (x *databaseWatchPrefixClient) Recv() (*WatchPrefixResponse, error) {
	m := new(WatchPrefixResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Database service

type DatabaseServer interface {
	Configure(context.Context, *ConfigureRequest) (*ConfigureResponse, error)
	GetValues(context.Context, *GetValuesRequest) (*GetValuesResponse, error)
	WatchPrefix(*WatchPrefixRequest, Database_WatchPrefixServer) error
}

func RegisterDatabaseServer(s *grpc.Server, srv DatabaseServer) {
	s.RegisterService(&_Database_serviceDesc, srv)
}

func _Database_Configure_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfigureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseServer).Configure(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Database/Configure",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseServer).Configure(ctx, req.(*ConfigureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Database_GetValues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetValuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DatabaseServer).GetValues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Database/GetValues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DatabaseServer).GetValues(ctx, req.(*GetValuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Database_WatchPrefix_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchPrefixRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DatabaseServer).WatchPrefix(m, &databaseWatchPrefixServer{stream})
}

type Database_WatchPrefixServer interface {
	Send(*WatchPrefixResponse) error
	grpc.ServerStream
}

type databaseWatchPrefixServer struct {
	grpc.ServerStream
}

func (x *databaseWatchPrefixServer) Send(m *WatchPrefixResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Database_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Database",
	HandlerType: (*DatabaseServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Configure",
			Handler:    _Database_Configure_Handler,
		},
		{
			MethodName: "GetValues",
			Handler:    _Database_GetValues_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchPrefix",
			Handler:       _Database_WatchPrefix_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "database.proto",
}

func init() { proto1.RegisterFile("database.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 312 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x51, 0x4d, 0x4f, 0x83, 0x40,
	0x14, 0xcc, 0x52, 0x4b, 0xe4, 0x91, 0x18, 0xba, 0xf5, 0x03, 0x39, 0x35, 0x68, 0x4c, 0x4f, 0xc4,
	0xd4, 0x8b, 0x5f, 0x69, 0x4c, 0xfc, 0xba, 0x1a, 0x0e, 0x7a, 0xa6, 0xf5, 0x55, 0x9b, 0x1a, 0x40,
	0x76, 0x31, 0xf2, 0x17, 0x8c, 0xbf, 0xce, 0x5f, 0x64, 0xd8, 0x7d, 0x25, 0x6b, 0xd1, 0x83, 0x27,
	0x76, 0xe7, 0xcd, 0x3c, 0x66, 0x66, 0x61, 0xe3, 0x31, 0x91, 0xc9, 0x24, 0x11, 0x18, 0xe5, 0x45,
	0x26, 0x33, 0xde, 0x55, 0x9f, 0xf0, 0x83, 0x81, 0x77, 0x99, 0xa5, 0xb3, 0xf9, 0x53, 0x59, 0x60,
	0x8c, 0xaf, 0x25, 0x0a, 0xc9, 0xcf, 0xc0, 0x9e, 0x2a, 0xcc, 0x67, 0x83, 0xce, 0xd0, 0x1d, 0xed,
	0x69, 0x4d, 0xb4, 0x4a, 0x24, 0xe0, 0x3a, 0x95, 0x45, 0x15, 0x93, 0x24, 0x38, 0x01, 0xd7, 0x80,
	0xb9, 0x07, 0x9d, 0x05, 0x56, 0x3e, 0x1b, 0xb0, 0xa1, 0x13, 0xd7, 0x47, 0xbe, 0x09, 0xdd, 0xb7,
	0xe4, 0xa5, 0x44, 0xdf, 0x52, 0x98, 0xbe, 0x9c, 0x5a, 0xc7, 0x2c, 0xec, 0x43, 0xcf, 0xf8, 0x85,
	0xc8, 0xb3, 0x54, 0x60, 0x78, 0x00, 0xde, 0x2d, 0xca, 0xfb, 0x9a, 0x24, 0x96, 0x06, 0x39, 0xac,
	0x2d, 0xb0, 0x12, 0xca, 0x9e, 0x13, 0xab, 0x73, 0xf8, 0xc9, 0xa0, 0x67, 0x10, 0xb5, 0x9a, 0x9f,
	0x83, 0xad, 0xf6, 0x0b, 0x8a, 0xb2, 0x4f, 0x51, 0x5a, 0xcc, 0x48, 0x5f, 0x29, 0x8b, 0xd6, 0xd4,
	0x59, 0x0c, 0xf8, 0x5f, 0x59, 0x2e, 0x80, 0x3f, 0x24, 0x72, 0xfa, 0x7c, 0x57, 0xe0, 0x6c, 0xfe,
	0xbe, 0x34, 0xbe, 0x0d, 0x76, 0xae, 0x00, 0x5a, 0x42, 0xb7, 0x26, 0x90, 0x65, 0x04, 0xda, 0x82,
	0xfe, 0x8f, 0x0d, 0xda, 0xe7, 0xe8, 0x8b, 0xc1, 0xfa, 0x15, 0xbd, 0x25, 0x1f, 0x83, 0xd3, 0x34,
	0xc6, 0x77, 0xfe, 0x78, 0xa6, 0xc0, 0x6f, 0x0f, 0xa8, 0x9e, 0x31, 0x38, 0x4d, 0x13, 0x8d, 0x7e,
	0xb5, 0xee, 0x46, 0xdf, 0xae, 0xf7, 0x06, 0x5c, 0xc3, 0x23, 0xdf, 0x25, 0x62, 0x3b, 0x79, 0x10,
	0xfc, 0x36, 0xd2, 0x5b, 0x0e, 0xd9, 0xc4, 0x56, 0xc3, 0xa3, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x09, 0xad, 0xfa, 0xe4, 0xa6, 0x02, 0x00, 0x00,
}
